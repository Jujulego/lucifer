name: Pull Requests

on:
  pull_request:
    branches: [ master ]

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x

      - name: Setup Cache
        id: setup-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: Setup Nx
        id: setup
        run: git fetch --no-tags --prune --depth=5 origin ${{ github.base_ref }}

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-cache.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Lint
        run: yarn run affected:lint --scan --base=origin/${{ github.base_ref }}

  tests:
    runs-on: ubuntu-latest
    needs: lint

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: 'root'
          POSTGRES_PASSWORD: 'root'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      AUTH0_DOMAIN: 'test.com'
      AUTH0_AUDIENCE: 'test'
      AUTH0_CLIENT_ID: 'test'
      AUTH0_CLIENT_SECRET: 'test'

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x

      - name: Setup Cache
        id: setup-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: Setup Database
        uses: ./.github/actions/setup-db
        with:
          db-host: 'localhost'
          db-port: 5432
          db-username: 'root'
          db-password: 'root'

      - name: Setup Nx
        id: setup
        run: git fetch --no-tags --prune --depth=5 origin ${{ github.base_ref }}

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-cache.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Migrate
        run: |
          yarn run build:tools
          yarn run nx run-many --all --target=db-migrate --scan

      - name: Tests
        run: yarn run affected:test --scan --base=origin/${{ github.base_ref }} --codeCoverage --coverageReporters=clover,lcovonly,json

      - name: Codecov
        uses: codecov/codecov-action@v1.2.1
        with:
          flags: unit

  e2e-tests:
    runs-on: ubuntu-latest
    needs: tests

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: 'root'
          POSTGRES_PASSWORD: 'root'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x

      - name: Setup Cache
        id: setup-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: Setup Database
        uses: ./.github/actions/setup-db
        with:
          db-host: 'localhost'
          db-port: 5432
          db-username: 'root'
          db-password: 'root'

      - name: Setup Nx
        id: setup
        run: git fetch --no-tags --prune --depth=5 origin ${{ github.base_ref }}

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-cache.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --pure-lockfile
          yarn run build:tools

      - name: Migrate
        run: yarn run nx run-many --all --target=db-migrate --scan

      - name: Start & Seed API
        # TODO: find better alternative to `sleep 10`
        run: |
          yarn run nx run lucifer-api:serve:e2e &
          yarn run nx run lucifer-api:seed --scan
          sleep 10
        env:
          PORT: 3333

          AUTH0_DOMAIN: jujulego.eu.auth0.com
          AUTH0_AUDIENCE: 'https://lucifer-api.herokuapp.com/'
          AUTH0_CLIENT_ID: dpD3arJJNBkxfNcrAyLPKf3Zc7oMmIdX
          AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}

      - name: E2E Tests
        run: |
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p
          yarn run nx affected:e2e --scan --base=origin/${{ github.base_ref }}
        env:
          CYPRESS_Auth0ClientSecret: ${{ secrets.E2E_AUTH0_CLIENT_SECRET }}

      - name: Codecov
        uses: codecov/codecov-action@v1.2.1
        with:
          flags: e2e

      - name: Archive cypress results
        uses: actions/upload-artifact@v2
        with:
          name: cypress-results
          path: dist/cypress

  build:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v2.1.4
        with:
          node-version: 14.x

      - name: Setup Cache
        id: setup-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-cache.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --pure-lockfile
          yarn run build:tools

      - name: Build
        run: yarn run nx run-many --all --target=build --scan

      - name: Archive build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist
