name: Push

on:
  push:
    branches: [master]

env:
  NX_BRANCH: ${{ github.event.number }}
  NX_RUN_GROUP: ${{ github.run_id }}

jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: 'root'
          POSTGRES_PASSWORD: 'root'
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    env:
      AUTH0_DOMAIN: 'test.com'
      AUTH0_AUDIENCE: 'test'
      AUTH0_CLIENT_ID: 'test'
      AUTH0_CLIENT_SECRET: 'test'

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup Cache
        id: setup-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: Setup Database
        uses: ./.github/actions/setup-db
        with:
          db-host: 'localhost'
          db-port: 5432
          db-username: 'root'
          db-password: 'root'

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-cache.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --pure-lockfile
          yarn run build:tools

      - name: Lint
        run: yarn run nx run-many --all --target=lint --scan

      - name: Migrate
        run: yarn run nx run-many --all --target=db-migrate --scan

      - name: Tests
        run: yarn run nx run-many --all --target=test --scan

  build:
    runs-on: ubuntu-latest
    needs: tests

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup Cache
        id: setup-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-cache.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install --pure-lockfile

      - name: Build
        run: yarn run nx run-many --all --target=build --scan

      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: production-build
          path: dist

  terraform:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        run: terraform fmt -check res

      - name: Terraform Init
        run: terraform init res

      - name: Terraform Apply
        run: terraform apply -auto-approve res

  deploy:
    runs-on: ubuntu-latest
    needs: [build, terraform]

    steps:
      - uses: actions/checkout@v2

      - name: Download production artifacts
        uses: actions/download-artifact@v2
        with:
          name: production-build
          path: dist

      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Setup Cache
        id: setup-cache
        run: echo "::set-output name=yarn-cache::$(yarn cache dir)"

      - name: Setup Git
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com

      - uses: actions/cache@v2
        with:
          path: ${{ steps.setup-cache.outputs.yarn-cache }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: |
          yarn install --pure-lockfile
          yarn run build:tools

      - name: Deploy
        env:
          ACTIONS_RUNNER_DEBUG: true
          REPOSITORY_URL: "https://${{ github.actor }}:${{ github.token }}@github.com/${{ github.repository }}.git"
        run: yarn run nx run-many --all --target=deploy --scan --repository=$REPOSITORY_URL
